--- /home/simric/tmp/gVirtualXRay-1.0.0-Source/cmake/CMakeLists.txt	2014-12-18 11:47:03.000000000 +0100
+++ CMakeLists.txt	2019-09-05 09:54:14.161142597 +0200
@@ -36,7 +36,7 @@
 INCLUDE(${CMAKE_CURRENT_SOURCE_DIR}/version.cmake)
 
 # Initialise some states by default ############################################
-set(BUILD_SHARED_LIBS OFF)
+set(BUILD_SHARED_LIBS ON)
 
 
 # Minimum CMake version ########################################################
@@ -281,58 +281,67 @@
 
 
 # ITK ##########################################################################
-FIND_PACKAGE(ITK)
-IF(ITK_FOUND)
-	SET (HAS_ITK ON)
-	ADD_DEFINITIONS(-DHAS_ITK)
-	INCLUDE(${USE_ITK_FILE})
-	SET(optionalLibs ${optionalLibs} ${ITK_LIBRARIES})
-
-	IF(ITKVtkGlue_LOADED)
-		FIND_PACKAGE(VTK REQUIRED)
-		IF(VTK_FOUND)
-			SET (HAS_VTK ON)
-			ADD_DEFINITIONS(-DHAS_VTK)
-			INCLUDE(${VTK_USE_FILE})
-			LINK_DIRECTORIES(${VTK_LIBRARY_DIRS})
-			SET (gVirtualXRay_LIBRARY_DIRS ${gVirtualXRay_LIBRARY_DIRS} ${VTK_LIBRARY_DIRS})
-			SET(optionalLibs ${optionalLibs} ${VTK_LIBRARIES})
-		ELSE(VTK_FOUND)
-			SET (HAS_VTK OFF)
-			MESSAGE(WARNING "VTK not found.")
-		ENDIF(VTK_FOUND)
-	ELSE(ITKVtkGlue_LOADED)
-		SET (HAS_VTK OFF)
-	ENDIF(ITKVtkGlue_LOADED)
-ELSE(ITK_FOUND)
-	MESSAGE(WARNING "ITK not found.")
-	SET (HAS_ITK OFF)
-ENDIF(ITK_FOUND)
+
+#FIND_PACKAGE(ITK)
+#IF(ITK_FOUND)
+#	SET (HAS_ITK ON)
+#	ADD_DEFINITIONS(-DHAS_ITK)
+	#INCLUDE(${USE_ITK_FILE})
+#	INCLUDE(${ITK_USE_FILE})
+#	SET(optionalLibs ${optionalLibs} ${ITK_LIBRARIES})
+
+#	IF(ITKVtkGlue_LOADED)
+#		FIND_PACKAGE(VTK REQUIRED)
+#		IF(VTK_FOUND)
+#			SET (HAS_VTK ON)
+#			ADD_DEFINITIONS(-DHAS_VTK)
+#			INCLUDE(${VTK_USE_FILE})
+#			LINK_DIRECTORIES(${VTK_LIBRARY_DIRS})
+#			SET (gVirtualXRay_LIBRARY_DIRS ${gVirtualXRay_LIBRARY_DIRS} ${VTK_LIBRARY_DIRS})
+#			SET(optionalLibs ${optionalLibs} ${VTK_LIBRARIES})
+#		ELSE(VTK_FOUND)
+#			SET (HAS_VTK OFF)
+#			MESSAGE(WARNING "VTK not found.")
+#		ENDIF(VTK_FOUND)
+#	ELSE(ITKVtkGlue_LOADED)
+#		SET (HAS_VTK OFF)
+#	ENDIF(ITKVtkGlue_LOADED)
+#ELSE(ITK_FOUND)
+#	MESSAGE(WARNING "ITK not found.")
+#	SET (HAS_ITK OFF)
+#ENDIF(ITK_FOUND)
 
 
 # ZLIB #########################################################################
-FIND_PACKAGE(ZLIB REQUIRED)
-IF(ZLIB_FOUND)
-    INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIRS})
-    SET (gVirtualXRay_INCLUDE_DIRS ${gVirtualXRay_INCLUDE_DIRS} ${ZLIB_INCLUDE_DIRS})
-    SET(requiredLibs ${requiredLibs} ${ZLIB_LIBRARIES})
-ELSE(ZLIB_FOUND)
-    MESSAGE("ZLIB not found.")
-ENDIF(ZLIB_FOUND)
+
+FIND_LIBRARY(ZLIB_FILE NAMES zlib zlib1 libz z  PATHS )
+message(zlib_file ${ZLIB_FILE})
+#FIND_PACKAGE(ZLIB REQUIRED)
+#message(zlib_dir ${ZLIB_LIBRARIES})
+#message(zlib_include ${ZLIB_INCLUDE_DIRS})
+
+#IF(ZLIB_FOUND)
+    #INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIRS})
+    #SET (gVirtualXRay_INCLUDE_DIRS ${gVirtualXRay_INCLUDE_DIRS} ${ZLIB_INCLUDE_DIRS})
+    #SET(requiredLibs ${requiredLibs} ${ZLIB_LIBRARIES})
+    #ELSE(ZLIB_FOUND)
+    #MESSAGE("ZLIB not found.")
+    #ENDIF(ZLIB_FOUND)
 
 
+    SET(requiredLibs ${requiredLibs} z)
 # FREETYPE ####################################################################
-FIND_PACKAGE(Freetype)
-IF(FREETYPE_FOUND)
-    SET (HAS_FREETYPE ON)
-    ADD_DEFINITIONS(-DHAS_FREETYPE)
-    INCLUDE_DIRECTORIES(${FREETYPE_INCLUDE_DIRS})
-    SET (gVirtualXRay_INCLUDE_DIRS ${gVirtualXRay_INCLUDE_DIRS} ${FREETYPE_INCLUDE_DIRS})
-    SET(optionalLibs ${optionalLibs} ${FREETYPE_LIBRARIES})
-ELSE(FREETYPE_FOUND)
-    SET (HAS_FREETYPE OFF)
-    MESSAGE(WARNING "Freetype not found.")
-ENDIF(FREETYPE_FOUND)
+#FIND_PACKAGE(Freetype)
+#IF(FREETYPE_FOUND)
+#    SET (HAS_FREETYPE ON)
+#    ADD_DEFINITIONS(-DHAS_FREETYPE)
+#    INCLUDE_DIRECTORIES(${FREETYPE_INCLUDE_DIRS})
+#    SET (gVirtualXRay_INCLUDE_DIRS ${gVirtualXRay_INCLUDE_DIRS} ${FREETYPE_INCLUDE_DIRS})
+#    SET(optionalLibs ${optionalLibs} ${FREETYPE_LIBRARIES})
+#ELSE(FREETYPE_FOUND)
+#    SET (HAS_FREETYPE OFF)
+#    MESSAGE(WARNING "Freetype not found.")
+#ENDIF(FREETYPE_FOUND)
 
 
 # XCOM Database ################################################################
@@ -357,7 +366,7 @@
     configure_file (
         "${CMAKE_CURRENT_SOURCE_DIR}/gVirtualXRayConfigXCOM.h.in"
         "${PROJECT_BINARY_DIR}/gVirtualXRay/gVirtualXRayConfig.h"
-    }})
+    )
 ELSE (XCOM_PATH)
     SET (HAS_XCOM OFF)
     configure_file (
@@ -368,7 +377,8 @@
 
 
 # Create the library ###########################################################
-ADD_LIBRARY (gVirtualXRay STATIC ${SOURCES})
+#ADD_LIBRARY (gVirtualXRay STATIC ${SOURCES})
+ADD_LIBRARY (gVirtualXRay SHARED ${SOURCES})
 
 
 # Create the RESOURCES ###########################################################
@@ -438,8 +448,10 @@
 
 
 # Linkage of the target ########################################################
-set_target_properties(gVirtualXRay PROPERTIES LINK_SEARCH_START_STATIC ON)
+#set_target_properties(gVirtualXRay PROPERTIES LINK_SEARCH_START_STATIC ON)
+#TARGET_LINK_LIBRARIES (gVirtualXRay ${requiredLibs} ${optionalLibs})
 TARGET_LINK_LIBRARIES (gVirtualXRay ${requiredLibs} ${optionalLibs})
+
 SET (gVirtualXRay_LIBRARIES ${requiredLibs} ${optionalLibs} gVirtualXRay)
 
 
@@ -496,62 +508,12 @@
    	MESSAGE("Do not build tutorials.")
 ENDIF (BUILD_TUTORIALS)
 
-INSTALL (TARGETS gVirtualXRay ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/library/lib                  COMPONENT libraries)
+INSTALL (
+TARGETS gVirtualXRay 
+ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/library/lib
+LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/library/lib 
+COMPONENT libraries)
 INSTALL (FILES ${HXX_SOURCES}         DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/library/include/gVirtualXRay COMPONENT headers)
 INSTALL (FILES ${CMAKE_CURRENT_SOURCE_DIR}/../LICENSE.txt DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR}/library     COMPONENT libraries)
 INSTALL (FILES ${CMAKE_CURRENT_SOURCE_DIR}/../LICENSE.txt DESTINATION ${CMAKE_INSTALL_PREFIX}/${INSTALL_DIR})
 
-
-SET (CPACK_PACKAGE_FILE_NAME gVirtualXRay)
-SET (CPACK_PACKAGE_ICON ${CMAKE_CURRENT_SOURCE_DIR}/doc/logo.ico)
-
-IF (APPLE)
-	SET (CPACK_BUNDLE_NAME gVirtualXRay)
-	SET (CPACK_BUNDLE_ICON ${CMAKE_CURRENT_SOURCE_DIR}/examples/build/DragonDemo.icns)
-	#SET (CPACK_BUNDLE_PLIST - path to a file that will become the bundle plist.
-	#SET (CPACK_BUNDLE_STARTUP_COMMAND - path to a file that will be executed when the user opens the bundle. Could be a shell-script or a binary. 
-ENDIF(APPLE)
-
-
-SET(CPACK_SOURCE_IGNORE_FILES "~$")
-LIST( APPEND CPACK_SOURCE_INSTALLED_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/../cmake     cmake)
-LIST( APPEND CPACK_SOURCE_INSTALLED_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/../include   include)
-LIST( APPEND CPACK_SOURCE_INSTALLED_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/../src       src)
-LIST( APPEND CPACK_SOURCE_INSTALLED_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/../resources resources)
-LIST( APPEND CPACK_SOURCE_INSTALLED_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/../examples  examples)
-LIST( APPEND CPACK_SOURCE_INSTALLED_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/../tutorials tutorials)
-LIST( APPEND CPACK_SOURCE_INSTALLED_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/../doc/dist_doc1    .)
-LIST( APPEND CPACK_SOURCE_INSTALLED_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/../doc/dist_doc2   doc)
-LIST( APPEND CPACK_SOURCE_INSTALLED_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/../doc/html        doc/html)
-LIST( APPEND CPACK_SOURCE_INSTALLED_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/../doc/TUTORIALS   doc/tutorials)
-LIST( APPEND CPACK_SOURCE_INSTALLED_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/../doc/screenshots doc/screenshots)
-
-SET (CPACK_COMPONENT_LIBRARIES_DISPLAY_NAME "Libraries")
-SET (CPACK_COMPONENT_HEADERS_DISPLAY_NAME "C++ Headers")
-
-SET (CPACK_COMPONENT_LIBRARIES_DESCRIPTION "Static libraries used to build programs with gVirtualXRay")
-SET (CPACK_COMPONENT_HEADERS_DESCRIPTION "C/C++ header files for use with gVirtualXRay")
-
-SET (CPACK_COMPONENT_LIBRARIES_GROUP "Development")
-SET (CPACK_COMPONENT_HEADERS_GROUP "Development")
-
-SET (CPACK_COMPONENT_GROUP_DEVELOPMENT_DESCRIPTION "All of the tools you'll ever need to develop software with gVirtualXRay")
-
-SET (CPACK_COMPONENT_LIBRARIES_INSTALL_TYPES Developer Full)
-SET (CPACK_COMPONENT_HEADERS_INSTALL_TYPES Developer Full)
-
-
-IF (WIN32)
-    SET (CPACK_GENERATOR NSIS)
-    SET (CPACK_NSIS_PACKAGE_NAME ${MAIN_PACKAGE_NAME})
-    SET (CPACK_NSIS_DISPLAY_NAME ${MAIN_PACKAGE_NAME})
-    SET (CPACK_NSIS_CONTACT ${EMAIL})
-    SET (CPACK_PACKAGE_INSTALL_REGISTRY_KEY "${MAIN_PACKAGE_NAME}-${PROJECT_VERSION}")
-    SET (CPACK_NSIS_MENU_LINKS "${MAIN_WEBSITE}" "Homepage for ${MAIN_PACKAGE_NAME}")
-ENDIF (WIN32)
-
-
-IF (NOT CPack_CMake_INCLUDED)
-    INCLUDE(CPack)
-ENDIF (NOT CPack_CMake_INCLUDED)
-
